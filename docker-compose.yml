version: '3.8'

services:
  nginx:
    build: ./nginx
    ports:
      - "80:80"
    depends_on:
      - frontend
      - backend
    networks:
      - app-network

  frontend:
    build: ./frontend
    environment:
      - REACT_APP_API_URL=http://localhost/api
    volumes:
      - ./frontend/src:/app/src
    depends_on:
      - backend
    networks:
      - app-network

  backend:
    build: ./backend
    environment:
      - DATABASE_URL=postgresql://liveu:password@timescaledb:5432/loganalyzer
      - REDIS_URL=redis://redis:6379
      - STORAGE_TYPE=minio
      - MINIO_ENDPOINT=minio:9000
      - MINIO_ACCESS_KEY=minioadmin
      - MINIO_SECRET_KEY=minioadmin
      - MINIO_BUCKET=logs
    volumes:
      - ./backend/src:/app/src
      - upload-temp:/tmp/uploads
    depends_on:
      - timescaledb
      - redis
      - minio
    networks:
      - app-network

  parser:
    build: ./parser
    environment:
      - DATABASE_URL=postgresql://liveu:password@timescaledb:5432/loganalyzer
      - REDIS_URL=redis://redis:6379
      - MINIO_ENDPOINT=minio:9000
      - MINIO_ACCESS_KEY=minioadmin
      - MINIO_SECRET_KEY=minioadmin
      - MINIO_BUCKET=logs
    volumes:
      - upload-temp:/tmp/uploads
    depends_on:
      - timescaledb
      - redis
      - minio
    deploy:
      replicas: 2
    networks:
      - app-network

  timescaledb:
    image: timescale/timescaledb:latest-pg14
    environment:
      - POSTGRES_DB=loganalyzer
      - POSTGRES_USER=liveu
      - POSTGRES_PASSWORD=password
    volumes:
      - timescale-data:/var/lib/postgresql/data
      - ./scripts/init-db.sql:/docker-entrypoint-initdb.d/init.sql
    ports:
      - "5432:5432"
    networks:
      - app-network

  redis:
    image: redis:7-alpine
    volumes:
      - redis-data:/data
    networks:
      - app-network

  minio:
    image: minio/minio
    ports:
      - "9000:9000"
      - "9001:9001"
    environment:
      - MINIO_ROOT_USER=minioadmin
      - MINIO_ROOT_PASSWORD=minioadmin
    command: server /data --console-address ":9001"
    volumes:
      - minio-data:/data
    networks:
      - app-network

networks:
  app-network:
    driver: bridge

volumes:
  timescale-data:
  redis-data:
  minio-data:
  upload-temp:
